@{
    ViewData["Title"] = "Home Page";
}

<!--This is my first html code-->

<img src="https://www.campusmvp.es/recursos/image.axd?picture=banner-asp-net-core-750x300.png" />
<h1>ASP.NET core</h1>

<body >
    <Big>Routing configuration in ASP.NET</Big>
    <hr />
    <article>

        <Big style="font-family:Arial"><u>Introduction to ASP.NET Core</u></Big>
        <br/>
        ASP.NET Core is a modern, open-source framework developed by Microsoft for building web applications, APIs, and microservices. It is a cross-platform framework, meaning it can run on Windows, macOS, and Linux, making it highly flexible for developers working in different environments. ASP.NET Core is a significant evolution from the earlier ASP.NET framework, as it is built to be lightweight, modular, and highly performant. By stripping away unnecessary overhead and focusing on the essentials, ASP.NET Core ensures that applications are fast, scalable, and efficient.
        <br/>
        <big style="font-family:Arial"><u>Key Features of ASP.NET Core</u></big>
        <br/>
        One of the core features of ASP.NET Core is its modular architecture. Developers can choose which components to include in their applications, leading to smaller deployment sizes and better performance. The framework also supports Dependency Injection (DI) natively, making it easier to manage the dependencies in your application and follow SOLID principles. Another standout feature is the integration with modern development tools like Entity Framework Core for database access, SignalR for real-time communications, and Razor Pages for building dynamic web pages efficiently.
        <br />
        <big style="font-family:Arial"><u>Cross-Platform and Cloud-Ready</u></big>
        <br />
        ASP.NET Core is designed with the cloud in mind. Whether you're deploying your applications to Microsoft Azure or other cloud services, ASP.NET Core offers seamless integration. Its cross-platform nature makes it easier to develop in various environments, and the ability to containerize applications using Docker makes it ideal for modern DevOps workflows. With built-in support for logging, configuration management, and security features like identity management and authentication, ASP.NET Core is a robust framework for developing secure, cloud-ready applications.
        <br />
        <big style="font-family:Arial"><u>Versatility and Future-Proof Development</u></big>
        <br />
        ASP.NET Core supports a wide range of application types, from traditional web applications using MVC (Model-View-Controller) to RESTful APIs and real-time applications using SignalR. This versatility makes it suitable for both small projects and large, enterprise-level solutions. With continuous improvements from Microsoft and the open-source community, ASP.NET Core is future-proof, with regular updates ensuring that developers have access to the latest features and performance improvements. This makes ASP.NET Core a solid choice for any developer looking to build modern, high-performance web applications.
    </article>

    <!--Footer is a block element(Cover all the available space)-->
    <footer >
    <hr />
    <ol>
        <!--List first item-->
        <li>
                <a href="https://learn.microsoft.com/en-us/aspnet/core/introduction-to-aspnet-core?view=aspnetcore-8.0" target="_main"> MSDOCS over ASP.NET core</a>
        </li>
            <!--Asp.net core-->
        <li>
                <a href="https://learn.microsoft.com/en-us/aspnet/core/introduction-to-aspnet-core?view=aspnetcore-8.0#why-choose-aspnet-core" target="_main">Why choose asp.net core?</a>
        </li>
            <!--Amazon-->
        <li>
                <a href="Home/Amazon" target="_main">Amazon</a>
        </li>
            <!--netfliz-->
        <li>
                <a href="Home/NetFlix" target="_blank">NetFlix</a>
        </li>
            <!--loading indicator-->
        <li>
                <a href="Home/Loader" target="_blank">Loading Indicator</a>
        </li>
           
        </ol>
    </footer>
</body>
